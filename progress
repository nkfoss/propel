12/6/19 (evening)

Using the following function gets our inputs into a vector. 

> (str/split (slurp "dictionary.txt") #"\n")

This will be useful in our error function

Progress (untested):
- Set target function to be our disemvowel implentation
- Acquired Levenshtein distance functions from Nic's announcement on Canvas 
    - These are inside core.clj 
    - "levenshtein-distance" AND "compute-next-row" fxns required
- Create "dismevowel-error-function"
    - inputs are retrieved from txt using "slurp" fxn
    - correct-outputs are defined by "target-function" (dismevowel)

TODO:
- Work Levenshtein distance into error-function
- Run the GP.

----------------------------------------------------------------------

12/6/19

Decisions on training data...

- Real-world words. (Not nonsense words like 'aaaaawwqer'.)
- Real words that DONT contain vowels...?
- Made a dictionary.txt example file

TODO:

- Create fitness function
- Create training data
- Get Levenshtein Distance implementation

Progress:

- Created disemvowel function, put into Clojure instructions (bottom)
- Wrote .txt file that will serve as input to the problem

